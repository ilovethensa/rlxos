From 341662b6d35378f58c84fdcf45f41b6354564686 Mon Sep 17 00:00:00 2001
From: itsmanjeet <itsmanjeet1998@gmail.com>
Date: Mon, 15 Nov 2021 15:42:47 +0530
Subject: [PATCH] rewrite for system

---
 app/app.go                | 149 +++++++++-----------
 app/debug.go              |   7 -
 app/dialog.go             |  50 -------
 app/page.go               |  14 ++
 app/signals.go            |  18 ---
 app/start.go              |  33 -----
 app/ui.go                 | 280 --------------------------------------
 app/utils.go              |  40 ------
 disk/disk.go              |  15 --
 installer/confirm.go      |  19 +++
 installer/const.go        |  13 --
 installer/data.go         |  35 +++++
 installer/disk.go         |  12 +-
 installer/install.go      | 248 +++++++++++++--------------------
 installer/installer.go    | 147 ++++++++++++++++----
 installer/memory.go       |   6 -
 installer/verification.go | 149 ++++++++++++++++++++
 main.go                   |  16 +--
 setup/account.go          |  39 ------
 setup/const.go            |  15 --
 setup/locale.go           |  47 -------
 setup/post.go             |  20 ---
 setup/setup.go            |  43 ------
 setup/timezone.go         |  51 -------
 24 files changed, 511 insertions(+), 955 deletions(-)
 delete mode 100644 app/debug.go
 delete mode 100644 app/dialog.go
 create mode 100644 app/page.go
 delete mode 100644 app/signals.go
 delete mode 100644 app/start.go
 delete mode 100644 app/ui.go
 delete mode 100644 app/utils.go
 delete mode 100644 disk/disk.go
 create mode 100644 installer/confirm.go
 delete mode 100644 installer/const.go
 create mode 100644 installer/data.go
 delete mode 100644 installer/memory.go
 create mode 100644 installer/verification.go
 delete mode 100644 setup/account.go
 delete mode 100644 setup/const.go
 delete mode 100644 setup/locale.go
 delete mode 100644 setup/post.go
 delete mode 100644 setup/setup.go
 delete mode 100644 setup/timezone.go

diff --git a/app/app.go b/app/app.go
index e66084d..292a58f 100644
--- a/app/app.go
+++ b/app/app.go
@@ -1,120 +1,101 @@
 package app
 
 import (
-	"errors"
 	"log"
 	"os"
-	"os/exec"
 
-	"github.com/gotk3/gotk3/glib"
+	"github.com/gotk3/gotk3/gdk"
 	"github.com/gotk3/gotk3/gtk"
 )
 
 type App struct {
-	ui *gtk.Builder
-
-	ID          string
-	Title       string
-	WelcomeMesg string
-
-	ProcessTitle string
-	ProcessMesg  string
-
-	SuccessMesg string
-	SuccessBtn  string
-
-	Stack  *gtk.Stack
-	Window *gtk.Window
+	Window *gtk.Assistant
+}
 
-	welcomeMesgLbl *gtk.Label
-	processNameLbl *gtk.Label
-	processDescLbl *gtk.Label
-	successMesgLbl *gtk.Label
-	successBtn     *gtk.Button
+func Setup(win *gtk.Assistant) (app *App, err error) {
+	app = &App{Window: win}
+	return
+}
 
-	StatusBuffer *gtk.TextBuffer
-	ProgressBar  *gtk.ProgressBar
+func (app App) GetIcon(logo string, size int) (pixbuf *gdk.Pixbuf, err error) {
 
-	stages_index []string
-	stages       map[string]func() error
+	theme, err := gtk.IconThemeGetDefault()
+	if err != nil {
+		return
+	}
 
-	SuccessHandler func()
+	pixbuf, err = theme.LoadIcon(logo, size, gtk.ICON_LOOKUP_FORCE_SIZE)
+	if err != nil {
+		return nil, nil
+	}
 
-	maxMessageSize int
+	return
 }
 
-func Create(ui *gtk.Builder) *App {
-	var app App
-
-	app.ui = ui
-
-	app.Window = app.getWidget("mainWindow").(*gtk.Window)
-	app.Window.SetTitle(app.Title)
-
-	app.Stack = app.getWidget("stack").(*gtk.Stack)
+func (app *App) NewPage(title, subtitle, icon string, data interface{}) (page *Page, err error) {
+	page = &Page{
+		GlobalData: data,
+	}
 
-	app.StatusBuffer = app.getWidget("statusBuffer").(*gtk.TextBuffer)
-	app.ProgressBar = app.getWidget("progressBar").(*gtk.ProgressBar)
-	app.welcomeMesgLbl = app.getWidget("welcomeMesgLbl").(*gtk.Label)
-	app.processNameLbl = app.getWidget("processNameLbl").(*gtk.Label)
-	app.processDescLbl = app.getWidget("processDescLbl").(*gtk.Label)
-	app.successMesgLbl = app.getWidget("successDescLbl").(*gtk.Label)
-	app.successBtn = app.getWidget("successBtn").(*gtk.Button)
+	page.Window = app.Window
 
-	signals := map[string]interface{}{
-		"onDestroy":            app.onDestroy,
-		"onSuccessBtnClicked":  app.onSuccessBtnClicked,
-		"onContinueBtnClicked": app.onContinueBtnClicked,
+	page.Box, err = gtk.BoxNew(gtk.ORIENTATION_VERTICAL, 0)
+	if err != nil {
+		return
 	}
 
-	app.stages = map[string]func() error{
-		"Initializing": func() error {
-			return errors.New("not yet implemented")
-		},
+	pixbuf, err := app.GetIcon(icon, 64)
+	if err != nil {
+		return
+	}
+	page.Icon, err = gtk.ImageNewFromPixbuf(pixbuf)
+	if err != nil {
+		return
 	}
 
-	app.ui.ConnectSignals(signals)
-
-	app.Window.SetPosition(gtk.WIN_POS_CENTER_ALWAYS)
-	return &app
-}
+	page.Box.PackStart(page.Icon, false, false, 17)
 
-func (app *App) Initialize() {
-	app.successBtn.SetLabel(app.SuccessBtn)
-	app.successMesgLbl.SetText(app.SuccessMesg)
-	app.processDescLbl.SetText(app.ProcessMesg)
-	app.processNameLbl.SetText(app.ProcessTitle)
-	app.welcomeMesgLbl.SetText(app.WelcomeMesg)
+	page.Title, err = gtk.LabelNew("")
+	if err != nil {
+		return
+	}
+	page.Title.SetMarkup("<span size=\"xx-large\" weight=\"ultrabold\">" + title + "</span>")
+	page.Box.PackStart(page.Title, false, false, 0)
 
-}
+	page.SubTitle, err = gtk.LabelNew("")
+	if err != nil {
+		return
+	}
+	page.SubTitle.SetMarkup("<span weight=\"bold\">" + subtitle + "</span>")
+	page.SubTitle.SetMarginBottom(27)
+	page.Box.PackStart(page.SubTitle, false, false, 0)
 
-func (app *App) getWidget(id string) glib.IObject {
-	obj, err := app.ui.GetObject(id)
-	app.checkError(err)
-	return obj
+	return
 }
 
-func (applr App) checkError(err error) {
+func (app *App) NewTitledPage(title, subtitle, icon string, data interface{}) (page *Page, err error) {
+	page, err = app.NewPage(title, subtitle, icon, data)
 	if err != nil {
-		log.Println("EE", err.Error())
-		exec.Command("/bin/zenity", "--error", "--text", err.Error()).Run()
-		os.Exit(1)
+		return
 	}
-}
 
-func (app *App) AddStage(id string, callback func() error) {
-
-	if app.maxMessageSize < len(id) {
-		app.maxMessageSize = len(id)
+	pixbuf, err := app.GetIcon(icon, 128)
+	if err != nil {
+		return
 	}
 
-	if app.stages_index == nil {
-		app.stages_index = make([]string, 0)
-	}
-	app.stages_index = append(app.stages_index, id)
+	page.Icon.SetFromPixbuf(pixbuf)
+	page.Box.SetVAlign(gtk.ALIGN_CENTER)
+	page.Box.SetMarginBottom(150)
+
+	return
+}
 
-	if app.stages == nil {
-		app.stages = make(map[string]func() error)
+func (app *App) IsDebug(appID string) bool {
+	if env := os.Getenv(appID + "_DEBUG"); len(env) == 0 {
+		log.Println("Debug is disabled")
+		return false
 	}
-	app.stages[id] = callback
+	log.Println("Debug is enabled")
+	return true
 }
diff --git a/app/debug.go b/app/debug.go
deleted file mode 100644
index 3873660..0000000
--- a/app/debug.go
+++ /dev/null
@@ -1,7 +0,0 @@
-package app
-
-import "os"
-
-func (app *App) IsDebug() bool {
-	return len(os.Getenv("SYS_SETUP_DEBUG")) != 0
-}
diff --git a/app/dialog.go b/app/dialog.go
deleted file mode 100644
index c18c1fb..0000000
--- a/app/dialog.go
+++ /dev/null
@@ -1,50 +0,0 @@
-package app
-
-import (
-	"os/exec"
-	"strings"
-
-	"github.com/gotk3/gotk3/gtk"
-)
-
-func (app *App) ErrorDialog(mesg string) {
-	dialog := gtk.MessageDialogNew(app.Window, gtk.DIALOG_DESTROY_WITH_PARENT, gtk.MESSAGE_ERROR, gtk.BUTTONS_CLOSE, mesg)
-	dialog.Run()
-
-	dialog.Destroy()
-}
-
-func (app *App) DialogInputText(text string) (string, error) {
-	data, err := exec.Command("/bin/zenity", "--entry", "--text="+text).Output()
-	return strings.TrimSuffix(string(data), "\n"), err
-}
-
-func (app *App) DialogPassword(text string) (string, error) {
-	data, err := exec.Command("/bin/zenity", "--password", "--text="+text).Output()
-	return strings.TrimSuffix(string(data), "\n"), err
-}
-
-func (app *App) DialogAsk(text string) bool {
-	return exec.Command("/bin/zenity", "--question", "--title='Confirm'", "--text="+text).Run() == nil
-}
-
-func (app *App) DialogList(mesg string, col string, options ...string) (string, error) {
-	args := []string{
-		"--list",
-		"--title=" + mesg,
-		"--column=" + col,
-	}
-
-	args = append(args, options...)
-	data, err := exec.Command("/bin/zenity", args...).Output()
-	return strings.TrimSuffix(string(data), "\n"), err
-}
-
-func (app *App) DialogUserLogin(text string) (string, string, error) {
-	data, err := exec.Command("/bin/zenity", "--password", "--username", "--text="+text).Output()
-	data_ := strings.Split(strings.TrimSuffix(string(data), "\n"), "|")
-	if len(data_) != 2 {
-		return "", "", err
-	}
-	return data_[0], data_[1], err
-}
diff --git a/app/page.go b/app/page.go
new file mode 100644
index 0000000..6b1d6cd
--- /dev/null
+++ b/app/page.go
@@ -0,0 +1,14 @@
+package app
+
+import "github.com/gotk3/gotk3/gtk"
+
+type Page struct {
+	*gtk.Box
+
+	Title    *gtk.Label
+	SubTitle *gtk.Label
+	Icon     *gtk.Image
+
+	Window     *gtk.Assistant
+	GlobalData interface{}
+}
diff --git a/app/signals.go b/app/signals.go
deleted file mode 100644
index 75d763e..0000000
--- a/app/signals.go
+++ /dev/null
@@ -1,18 +0,0 @@
-package app
-
-func (app *App) onDestroy() {
-	// TODO: check if installation is complete or not
-}
-
-func (app *App) onContinueBtnClicked() {
-	app.Stack.SetVisibleChildName("installPage")
-	go app.Start()
-}
-
-func (app *App) onSuccessBtnClicked() {
-	a, _ := app.Window.GetApplication()
-	if app.SuccessHandler != nil {
-		app.SuccessHandler()
-	}
-	a.Quit()
-}
diff --git a/app/start.go b/app/start.go
deleted file mode 100644
index be2a39e..0000000
--- a/app/start.go
+++ /dev/null
@@ -1,33 +0,0 @@
-package app
-
-import (
-	"log"
-	"time"
-
-	"github.com/gotk3/gotk3/glib"
-)
-
-func (app *App) Start() {
-
-	progress := 0.0
-	steps := 1.0 / float64(len(app.stages_index))
-
-	for _, id := range app.stages_index {
-		app.StartProcess(id)
-		time.Sleep(time.Second * 1)
-		if err := app.stages[id](); err != nil {
-			app.StateProcess("", false)
-			app.checkError(err)
-		}
-
-		progress += steps
-		app.StateProcess("", true)
-		app.UpdateProgress(progress)
-		log.Println("updating progress", progress)
-	}
-
-	glib.IdleAdd(func() {
-		app.Stack.SetVisibleChildName("successPage")
-	})
-
-}
diff --git a/app/ui.go b/app/ui.go
deleted file mode 100644
index 0dc9290..0000000
--- a/app/ui.go
+++ /dev/null
@@ -1,280 +0,0 @@
-package app
-
-const UI = `<?xml version="1.0" encoding="UTF-8"?>
-<!-- Generated with glade 3.38.2 -->
-<interface>
-  <requires lib="gtk+" version="3.24"/>
-  <object class="GtkTextBuffer" id="statusBuffer"/>
-  <object class="GtkWindow" id="mainWindow">
-    <property name="can-focus">False</property>
-    <property name="resizable">False</property>
-    <property name="default-width">800</property>
-    <property name="default-height">600</property>
-    <property name="deletable">False</property>
-    <child>
-      <object class="GtkStack" id="stack">
-        <property name="visible">True</property>
-        <property name="can-focus">False</property>
-        <property name="transition-duration">450</property>
-        <property name="transition-type">slide-left-right</property>
-        <child>
-          <object class="GtkBox">
-            <property name="visible">True</property>
-            <property name="can-focus">False</property>
-            <property name="halign">center</property>
-            <property name="valign">center</property>
-            <property name="margin-start">71</property>
-            <property name="margin-end">71</property>
-            <property name="margin-bottom">66</property>
-            <property name="orientation">vertical</property>
-            <child>
-              <object class="GtkImage">
-                <property name="visible">True</property>
-                <property name="can-focus">False</property>
-                <property name="margin-bottom">9</property>
-                <property name="icon-name">emoji-symbols-symbolic</property>
-                <property name="icon_size">6</property>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">0</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkLabel">
-                <property name="visible">True</property>
-                <property name="can-focus">False</property>
-                <property name="label" translatable="yes">Welcome!</property>
-                <attributes>
-                  <attribute name="weight" value="bold"/>
-                  <attribute name="scale" value="2.1000000000000001"/>
-                </attributes>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">1</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkLabel" id="welcomeMesgLbl">
-                <property name="visible">True</property>
-                <property name="can-focus">False</property>
-                <property name="margin-top">2</property>
-                <property name="margin-bottom">15</property>
-                <property name="label" translatable="yes">{{ WELCOME MESG }}</property>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">2</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkButton">
-                <property name="label" translatable="yes">Continue</property>
-                <property name="visible">True</property>
-                <property name="can-focus">True</property>
-                <property name="receives-default">True</property>
-                <property name="halign">center</property>
-                <property name="valign">center</property>
-                <signal name="clicked" handler="onContinueBtnClicked" swapped="no"/>
-                <style>
-                  <class name="suggested-action"/>
-                  <class name="circular"/>
-                </style>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">3</property>
-              </packing>
-            </child>
-          </object>
-          <packing>
-            <property name="name">welcomePage</property>
-            <property name="title" translatable="yes">Welcome Page</property>
-          </packing>
-        </child>
-        <child>
-          <object class="GtkBox">
-            <property name="visible">True</property>
-            <property name="can-focus">False</property>
-            <property name="orientation">vertical</property>
-            <child>
-              <object class="GtkImage">
-                <property name="visible">True</property>
-                <property name="can-focus">False</property>
-                <property name="margin-top">17</property>
-                <property name="margin-bottom">12</property>
-                <property name="icon-name">settings</property>
-                <property name="icon_size">6</property>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">0</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkLabel" id="processNameLbl">
-                <property name="visible">True</property>
-                <property name="can-focus">False</property>
-                <property name="label" translatable="yes">{{ PROCESS NAME }}</property>
-                <attributes>
-                  <attribute name="weight" value="bold"/>
-                  <attribute name="scale" value="1.8"/>
-                </attributes>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">1</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkLabel" id="processDescLbl">
-                <property name="visible">True</property>
-                <property name="can-focus">False</property>
-                <property name="margin-bottom">20</property>
-                <property name="label" translatable="yes">{{ PROCESS DESCRIPTION }}</property>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">2</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkTextView">
-                <property name="visible">True</property>
-                <property name="can-focus">True</property>
-                <property name="editable">False</property>
-                <property name="wrap-mode">word</property>
-                <property name="left-margin">17</property>
-                <property name="right-margin">17</property>
-                <property name="top-margin">15</property>
-                <property name="bottom-margin">15</property>
-                <property name="cursor-visible">False</property>
-                <property name="buffer">statusBuffer</property>
-                <property name="accepts-tab">False</property>
-              </object>
-              <packing>
-                <property name="expand">True</property>
-                <property name="fill">True</property>
-                <property name="position">3</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkProgressBar" id="progressBar">
-                <property name="visible">True</property>
-                <property name="can-focus">False</property>
-                <property name="show-text">True</property>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">4</property>
-              </packing>
-            </child>
-          </object>
-          <packing>
-            <property name="name">installPage</property>
-            <property name="title" translatable="yes">Install Page</property>
-            <property name="position">1</property>
-          </packing>
-        </child>
-        <child>
-          <object class="GtkBox">
-            <property name="visible">True</property>
-            <property name="can-focus">False</property>
-            <property name="halign">center</property>
-            <property name="valign">center</property>
-            <property name="margin-start">71</property>
-            <property name="margin-end">71</property>
-            <property name="margin-bottom">66</property>
-            <property name="orientation">vertical</property>
-            <child>
-              <object class="GtkImage">
-                <property name="visible">True</property>
-                <property name="can-focus">False</property>
-                <property name="margin-bottom">9</property>
-                <property name="icon-name">emblem-checked</property>
-                <property name="icon_size">6</property>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">0</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkLabel">
-                <property name="visible">True</property>
-                <property name="can-focus">False</property>
-                <property name="label" translatable="yes">Success!</property>
-                <attributes>
-                  <attribute name="weight" value="bold"/>
-                  <attribute name="scale" value="2.1000000000000001"/>
-                </attributes>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">1</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkLabel" id="successDescLbl">
-                <property name="visible">True</property>
-                <property name="can-focus">False</property>
-                <property name="margin-top">2</property>
-                <property name="margin-bottom">15</property>
-                <property name="label" translatable="yes">{{ SUCCESS MESG }}</property>
-                <property name="justify">center</property>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">2</property>
-              </packing>
-            </child>
-            <child>
-              <object class="GtkButton" id="successBtn">
-                <property name="label" translatable="yes">{{ SUCCESS BUTTON }}</property>
-                <property name="visible">True</property>
-                <property name="can-focus">True</property>
-                <property name="receives-default">True</property>
-                <property name="halign">center</property>
-                <property name="valign">center</property>
-                <signal name="clicked" handler="onSuccessBtnClicked" swapped="no"/>
-                <style>
-                  <class name="suggested-action"/>
-                  <class name="circular"/>
-                </style>
-              </object>
-              <packing>
-                <property name="expand">False</property>
-                <property name="fill">True</property>
-                <property name="position">3</property>
-              </packing>
-            </child>
-          </object>
-          <packing>
-            <property name="name">successPage</property>
-            <property name="title" translatable="yes">Success Page</property>
-            <property name="position">2</property>
-          </packing>
-        </child>
-      </object>
-    </child>
-    <child type="titlebar">
-      <object class="GtkHeaderBar">
-        <property name="visible">True</property>
-        <property name="can-focus">False</property>
-        <property name="title" translatable="yes">{{ TITLE }}</property>
-      </object>
-    </child>
-  </object>
-</interface>`
diff --git a/app/utils.go b/app/utils.go
deleted file mode 100644
index e2d2bc6..0000000
--- a/app/utils.go
+++ /dev/null
@@ -1,40 +0,0 @@
-package app
-
-import (
-	"fmt"
-	"log"
-	"strings"
-	"time"
-
-	"github.com/gotk3/gotk3/glib"
-)
-
-func (app *App) DisplayText(mesg string) {
-	glib.IdleAdd(func() {
-		str, err := app.StatusBuffer.GetText(app.StatusBuffer.GetStartIter(), app.StatusBuffer.GetEndIter(), false)
-		app.checkError(err)
-		str += mesg
-		app.StatusBuffer.SetText(str)
-	})
-}
-
-func (app *App) StartProcess(mesg string) {
-	app.DisplayText(fmt.Sprintf("○ %s%s\t", mesg, strings.Repeat(" ", (app.maxMessageSize-len(mesg)))))
-	log.Println(mesg)
-	// FOR BETTER UX...
-	time.Sleep(time.Millisecond * 200)
-}
-
-func (app *App) UpdateProgress(prog float64) {
-	glib.IdleAdd(func() {
-		app.ProgressBar.SetFraction(prog)
-	})
-}
-
-func (app *App) StateProcess(mesg string, success bool) {
-	if success {
-		app.DisplayText(mesg + "\t✓\n")
-	} else {
-		app.DisplayText(mesg + "\t✘\n")
-	}
-}
diff --git a/disk/disk.go b/disk/disk.go
deleted file mode 100644
index 0634716..0000000
--- a/disk/disk.go
+++ /dev/null
@@ -1,15 +0,0 @@
-package disk
-
-type BlockDevice struct {
-	Name      string        `json:"name"`
-	Type      string        `json:"fstype"`
-	Path      string        `json:"Path"`
-	Size      string        `json:"size"`
-	Label     string        `json:"label"`
-	UUID      string        `json:"uuid"`
-	Childrens []BlockDevice `json:"children"`
-}
-
-type BlockDevices struct {
-	Devices []BlockDevice `json:"blockdevices"`
-}
diff --git a/installer/confirm.go b/installer/confirm.go
new file mode 100644
index 0000000..8bf68e4
--- /dev/null
+++ b/installer/confirm.go
@@ -0,0 +1,19 @@
+package installer
+
+import (
+	"fmt"
+
+	"github.com/dustin/go-humanize"
+)
+
+func (ins *Installer) SetupConfirm() {
+	ins.confirmBuffer.SetText(fmt.Sprintf(`
+System Memory      :    %s
+BootLoader Type   :    %s
+Root Partition         :    %s
+System Image         :    %s
+Boot Device              :    %s
+Version                      :    %s`, humanize.Bytes(SystemMemory), BootLoader.String(), PartitionPath, IMAGE_PATH, BootDevice, VERSION))
+
+	ins.Window.SetPageComplete(ins.ConfirmPage, true)
+}
diff --git a/installer/const.go b/installer/const.go
deleted file mode 100644
index 225ba22..0000000
--- a/installer/const.go
+++ /dev/null
@@ -1,13 +0,0 @@
-package installer
-
-const (
-	ID            = "dev.rlxos.installer"
-	TITLE         = "System Installer"
-	WELCOME_MESG  = "Welcome to rlxOS system Installer, Click 'continue' to start installation process"
-	PROCESS_TITLE = "Installing rlxOS"
-	PROCESS_DESC  = "Please follow the instruction carefully"
-	SUCCESS_MESG  = "rlxOS is installed successfully, you can now reboot your system"
-	SUCCESS_BTN   = "Exit"
-
-	VERSION = "2110"
-)
diff --git a/installer/data.go b/installer/data.go
new file mode 100644
index 0000000..d8e7863
--- /dev/null
+++ b/installer/data.go
@@ -0,0 +1,35 @@
+package installer
+
+const (
+	MINIMUM_MEMORY = 2147483648
+	PARITION_LABEL = "rlxos"
+	APPID          = "SYS_INSTALLER"
+	IMAGE_PATH     = "/run/iso/rootfs.img"
+	VERSION        = "2200"
+)
+
+type BootLoaderType int
+
+const (
+	BootLoaderTypeEfi BootLoaderType = iota
+	BootLoaderTypeLegacy
+)
+
+var (
+	BootLoader    BootLoaderType
+	SystemMemory  uint64
+	PartitionPath string
+	PartitionUUID string
+	BootDevice    string
+)
+
+func (b BootLoaderType) String() string {
+	switch b {
+	case BootLoaderTypeEfi:
+		return "EFI"
+	case BootLoaderTypeLegacy:
+		return "Legacy"
+	}
+
+	return "<Unsupported Bootloader Type>"
+}
diff --git a/installer/disk.go b/installer/disk.go
index 250fb94..71a2027 100644
--- a/installer/disk.go
+++ b/installer/disk.go
@@ -13,6 +13,7 @@ type BlockDevice struct {
 	Size      string        `json:"size"`
 	Label     string        `json:"label"`
 	UUID      string        `json:"uuid"`
+	PartLabel string        `json:"partlabel"`
 	Childrens []BlockDevice `json:"children"`
 }
 
@@ -20,11 +21,16 @@ type BlockDevices struct {
 	Devices []BlockDevice `json:"blockdevices"`
 }
 
-func (in *Installer) StageSysConfig() error {
+func ListPartitions() (*BlockDevices, error) {
 	log.Println("Listing block devices")
 	data, err := exec.Command("lsblk", "-J", "-O").Output()
 	if err != nil {
-		return err
+		return nil, err
 	}
-	return json.Unmarshal(data, &in.devices)
+	var devices BlockDevices
+	if err := json.Unmarshal(data, &devices); err != nil {
+		return nil, err
+	}
+
+	return &devices, nil
 }
diff --git a/installer/install.go b/installer/install.go
index 22dc0ab..8f9b878 100644
--- a/installer/install.go
+++ b/installer/install.go
@@ -1,205 +1,141 @@
 package installer
 
 import (
-	"errors"
-	"log"
 	"os"
 	"os/exec"
 	"path"
-)
-
-func (in *Installer) StageInstall() error {
-	root_disk := ""
-	var err error
-	for {
-
-		log.Println("Searching root device with label 'rlxos'")
-		root_disk, err = in.searchLabel("rlxos")
-		if err != nil {
-			return err
-		}
-
-		if !in.DialogAsk("Please confirm if you want to install rlxOS on " + root_disk) {
-			return errors.New("user cancelled")
-		}
+	"time"
 
-		if len(root_disk) != 0 {
-			return in.installImage("/run/iso/rootfs.img", root_disk)
-		}
-
-	}
-}
+	"github.com/gotk3/gotk3/glib"
+)
 
-func (in *Installer) searchLabel(lbl string) (string, error) {
-	for _, disk := range in.devices.Devices {
-		for _, part := range disk.Childrens {
-			if part.Label == lbl {
-				return part.Path, nil
-			}
-		}
-	}
+func (ins *Installer) StartInstallation() {
 
-	if err := exec.Command("gparted").Run(); err != nil {
-		return "", err
-	}
+	updateProgress := func(mesg string, prog float64) {
+		glib.IdleAdd(func() {
+			ins.installProgress.SetText(mesg)
+			ins.installProgress.SetFraction(prog)
+		})
 
-	if err := in.StageSysConfig(); err != nil {
-		return "", err
+		time.Sleep(time.Millisecond * 150)
 	}
+	updateProgress("Preparing parition", 0.05)
 
-	return "", nil
-}
-
-func (in *Installer) installImage(imagePath, deviceNode string) error {
-	tempdir, err := os.MkdirTemp("", "installer-*")
+	workDir, err := os.MkdirTemp("", APPID+"-*")
 	if err != nil {
-		return err
+		updateProgress("Failed to prepare work directory", 1.0)
+		return
 	}
 
-	in.tempdir = tempdir
-
-	log.Printf("Mounting %s %s\n", deviceNode, tempdir)
-	if !in.IsDebug() {
-		if err := exec.Command("mount", deviceNode, tempdir).Run(); err != nil {
-			return err
+	if !ins.IsDebug(APPID) {
+		if err := exec.Command("mount", PartitionPath, workDir).Run(); err != nil {
+			updateProgress("Failed to mount partition, "+err.Error(), 1.0)
+			return
 		}
 	}
-	log.Println("Creating directories")
-	if !in.IsDebug() {
-		if err := os.MkdirAll(path.Join(tempdir, "rlxos", "system"), 0755); err != nil {
-			return err
+	updateProgress("Creating rlxos required directories", 0.1)
+	systemPath := path.Join(workDir, "rlxos", "system")
+	bootPath := path.Join(workDir, "boot")
+	efiDir := path.Join(bootPath, "efi")
+	if !ins.IsDebug(APPID) {
+		if err := os.MkdirAll(systemPath, 0755); err != nil {
+			updateProgress("Failed to create required dir, "+err.Error(), 1.0)
+			return
 		}
-	}
-
-	log.Println("Copying squash")
-	if !in.IsDebug() {
-		if err := exec.Command("cp", imagePath, path.Join(tempdir, "rlxos", "system", VERSION)).Run(); err != nil {
-			return err
-		}
-	}
-
-	return in.installBootloader(tempdir, deviceNode)
-}
 
-func (in *Installer) installBootloader(rootdir string, rootdevice string) error {
-	bootdir := path.Join(rootdir, "boot")
-	if err := os.MkdirAll(path.Join(bootdir, "grub"), 0755); err != nil {
-		return err
-	}
-	args := []string{"--root-directory=" + rootdir, "--boot-directory=" + bootdir, "--recheck"}
-
-	if _, err := os.Stat("/sys/firmware/efi/efivars"); os.IsNotExist(err) {
-		BootDevice := ""
-		for len(BootDevice) == 0 {
-			disks := make([]string, 0)
-			for _, a := range in.devices.Devices {
-				disks = append(disks, a.Path)
-			}
-			BootDevice, err = in.DialogList("Boot Disk", "disk", disks...)
-			if err != nil {
-				return err
-			}
+		if err := os.MkdirAll(bootPath, 0755); err != nil {
+			updateProgress("Failed to create required dir, "+err.Error(), 1.0)
+			return
 		}
-		args = append(args, BootDevice)
-	} else {
-		efidir := path.Join(bootdir, "efi")
-		if !in.IsDebug() {
-			if err := os.MkdirAll(efidir, 0755); err != nil {
-				return err
-			}
-		}
-
-		BootDevice := ""
-		for len(BootDevice) == 0 {
-			log.Println("Search EFI partition with LABEL 'EFI'")
-			for _, disk := range in.devices.Devices {
-				for _, part := range disk.Childrens {
-					if part.Label == "EFI" {
-						BootDevice = part.Path
-						break
-					}
-				}
-				if len(BootDevice) != 0 {
-					break
-				}
-			}
-
-			if len(BootDevice) == 0 {
-				if err := exec.Command("gparted").Run(); err != nil {
-					return err
-				}
 
-				if err := in.StageSysConfig(); err != nil {
-					return err
-				}
-			}
-		}
+		if BootLoader == BootLoaderTypeEfi {
 
-		log.Println("mounting boot device ", BootDevice)
-		if !in.IsDebug() {
-			if err := exec.Command("/bin/mount", BootDevice, efidir).Run(); err != nil {
-				return err
+			if err := os.MkdirAll(efiDir, 0755); err != nil {
+				updateProgress("Failed to create efi directory", 1.0)
+				return
 			}
 		}
 
-		args = append(args, "--bootloader-id=rlx")
 	}
-
-	log.Println("installing grub")
-	if !in.IsDebug() {
-		err := exec.Command("/bin/grub-install", args...).Run()
-		if err != nil {
-			return err
+	updateProgress("Installing System Image", 0.2)
+	if !ins.IsDebug(APPID) {
+		if err := exec.Command("cp", IMAGE_PATH, path.Join(systemPath, VERSION)).Run(); err != nil {
+			updateProgress("Failed to install system image, "+err.Error(), 1.0)
+			return
 		}
 	}
-
-	var UUID string
-	log.Println("configuring bootloader")
-	for _, disk := range in.devices.Devices {
-		for _, part := range disk.Childrens {
-			if part.Path == rootdevice {
-				UUID = part.UUID
-				break
+	updateProgress("Installing bootloader", 0.5)
+	switch BootLoader {
+	case BootLoaderTypeEfi:
+		if !ins.IsDebug(APPID) {
+			if err := exec.Command("mount", BootDevice, efiDir).Run(); err != nil {
+				updateProgress("Failed to mount efi, "+err.Error(), 1.0)
+				return
 			}
-
-			if len(UUID) != 0 {
-				break
+			if err := exec.Command("grub-install", "--root-directory="+workDir, "--boot-directory="+bootPath, "--recheck").Run(); err != nil {
+				updateProgress("Failed to install bootloader, "+err.Error(), 1.0)
+				return
 			}
 		}
-	}
 
-	device_config := "UUID=" + UUID
-	if len(UUID) == 0 {
-		device_config = rootdevice
+	case BootLoaderTypeLegacy:
+		if !ins.IsDebug(APPID) {
+			if err := exec.Command("grub-install", "--root-directory="+workDir, "--boot-directory="+bootPath, "--recheck", BootDevice).Run(); err != nil {
+				updateProgress("Failed to install bootloader, "+err.Error(), 1.0)
+				return
+			}
+		}
+	default:
+		updateProgress("Unsupported Bootloader: "+BootLoader.String(), 1.0)
+		return
 	}
-
-	grubcfg := `
+	updateProgress("Configuring Bootloader", 0.7)
+	grubConfig := `
 insmod part_gpt
 insmod part_msdos
 insmod all_video
 timeout=5
-default='rlxos inital setup'
-menuentry 'rlxos inital setup' {
+default='rlxos initial setup'
+
+menuentry 'rlxos initial setup' {
 	insmod gzio
 	insmod ext2
-	linux /boot/vmlinuz root=` + device_config + " system=" + VERSION + `
-	initrd /boot/initrd
+	linux /boot/vmlinuz root=` + PartitionUUID + " system=" + VERSION + `
+	initrd /boot/initrd	
 }`
 
-	if !in.IsDebug() {
-		if err := os.WriteFile(path.Join(rootdir, "boot", "grub", "grub.cfg"), []byte(grubcfg), 0644); err != nil {
-			return err
+	if !ins.IsDebug(APPID) {
+		if err := os.WriteFile(path.Join(bootPath, "grub", "grub.cfg"), []byte(grubConfig), 0644); err != nil {
+			updateProgress("Failed to write grub configuration, "+err.Error(), 1.0)
+			return
 		}
+	}
 
-		if err := exec.Command("/bin/cp", "/run/iso/boot/vmlinuz", path.Join(rootdir, "boot", "vmlinuz")).Run(); err != nil {
-			return err
+	updateProgress("Installing kernel", 0.8)
+	isoBootPath := path.Join(path.Dir(IMAGE_PATH), "boot")
+	if !ins.IsDebug(APPID) {
+		if err := exec.Command("cp", path.Join(isoBootPath, "vmlinuz"), path.Join(bootPath, "vmlinuz")).Run(); err != nil {
+			updateProgress("Failed to install linux kernel, "+err.Error(), 1.0)
+			return
 		}
+	}
 
-		if err := exec.Command("/bin/cp", "/run/iso/boot/initrd", path.Join(rootdir, "boot", "initrd")).Run(); err != nil {
-			return err
-		}
+	updateProgress("Installing initrd", 0.9)
+	data, err := exec.Command("zenity", "--entry", "--text=Enter Recovery Password", "--hide-text").Output()
+	if err != nil {
+		updateProgress("Failed to execute zentry, "+err.Error(), 1.0)
+		return
+	}
 
+	if !ins.IsDebug(APPID) {
+		if err := exec.Command("mkinitramfs", "-o="+path.Join(bootPath, "initrd"), "-p="+string(data)).Run(); err != nil {
+			updateProgress("Failed to generate initrd, "+err.Error(), 1.0)
+			return
+		}
 	}
+	updateProgress("Installation Success", 1.0)
 
-	return nil
+	glib.IdleAdd(func() {
+		ins.Window.SetCurrentPage(4)
+	})
 }
diff --git a/installer/installer.go b/installer/installer.go
index dd6be1b..e6de31b 100644
--- a/installer/installer.go
+++ b/installer/installer.go
@@ -1,46 +1,147 @@
 package installer
 
 import (
-	"log"
 	"os/exec"
 
 	"github.com/gotk3/gotk3/gtk"
 	"github.com/rlxos/installer/app"
-	"github.com/rlxos/installer/disk"
 )
 
 type Installer struct {
 	*app.App
+	WelcomePage *app.Page
 
-	devices disk.BlockDevices
-	tempdir string
+	VerifyPage     *app.Page
+	verifyProgress *gtk.ProgressBar
+
+	ConfirmPage   *app.Page
+	confirmBuffer *gtk.TextBuffer
+
+	InstallPage     *app.Page
+	installProgress *gtk.ProgressBar
+
+	FinishedPage *app.Page
 }
 
-func Init(ui *gtk.Builder) *Installer {
-	var in Installer
+func Setup(win *gtk.Assistant) error {
+	ins := &Installer{}
+	var err error
+	ins.App, err = app.Setup(win)
+	if err != nil {
+		return err
+	}
 
-	in.App = app.Create(ui)
+	ins.WelcomePage, err = ins.NewTitledPage("Welcome!", "Click on 'Continue' to verify system compatibality with rlxos", "rlxos", nil)
+	if err != nil {
+		return err
+	}
 
-	in.ID = ID
-	in.Title = TITLE
-	in.WelcomeMesg = WELCOME_MESG
-	in.ProcessTitle = PROCESS_TITLE
-	in.ProcessMesg = PROCESS_DESC
-	in.SuccessMesg = SUCCESS_MESG
-	in.SuccessBtn = SUCCESS_BTN
+	continueButton, err := gtk.ButtonNewWithLabel("Continue")
+	if err != nil {
+		return err
+	}
+	continueButton.SetMarginTop(28)
+	continueButton.SetHAlign(gtk.ALIGN_CENTER)
+	ins.WelcomePage.Box.PackStart(continueButton, false, false, 0)
 
-	in.Initialize()
+	continueButton.Connect("clicked", func() {
+		win.SetCurrentPage(1)
+		go ins.StartVerification()
+	})
 
-	in.AddStage("Reading System Configurations", in.StageSysConfig)
-	in.AddStage("Verify System Memory", in.StageVerifyMemory)
-	in.AddStage("Installing System", in.StageInstall)
+	win.AppendPage(ins.WelcomePage)
+	win.SetPageType(ins.WelcomePage, gtk.ASSISTANT_PAGE_CUSTOM)
+	win.SetPageComplete(ins.WelcomePage, true)
 
-	in.SuccessHandler = func() {
-		log.Println("logging out from system")
-		if !in.IsDebug() {
+	//
+	// Verify Page
+	//
+	ins.VerifyPage, err = ins.NewPage("System Verification", "Verifying System Compatibility with rlxos", "btsync-gui-0", nil)
+	if err != nil {
+		return err
+	}
+
+	win.AppendPage(ins.VerifyPage)
+	win.SetPageType(ins.VerifyPage, gtk.ASSISTANT_PAGE_CONTENT)
+
+	ins.verifyProgress, err = gtk.ProgressBarNew()
+	if err != nil {
+		return err
+	}
+	ins.verifyProgress.SetShowText(true)
+	ins.verifyProgress.SetMarginStart(28)
+	ins.verifyProgress.SetMarginEnd(28)
+	ins.VerifyPage.Box.PackStart(ins.verifyProgress, false, false, 128)
+
+	//
+	// Confirm Page
+	//
+	ins.ConfirmPage, err = ins.NewPage("Confirm", "Please confirm the configurations", "configure", nil)
+	if err != nil {
+		return err
+	}
+	win.AppendPage(ins.ConfirmPage)
+	win.SetPageType(ins.ConfirmPage, gtk.ASSISTANT_PAGE_CONFIRM)
+	textView, err := gtk.TextViewNew()
+	if err != nil {
+		return err
+	}
+	textView.SetCursorVisible(false)
+	textView.SetEditable(false)
+	textView.SetTopMargin(15)
+	textView.SetLeftMargin(25)
+	ins.ConfirmPage.Box.PackStart(textView, true, true, 0)
+	ins.confirmBuffer, err = textView.GetBuffer()
+	if err != nil {
+		return err
+	}
+
+	ins.Window.Connect("apply", func() {
+		win.SetCurrentPage(2)
+		go ins.StartInstallation()
+	})
+
+	//
+	// Install Page
+	//
+	ins.InstallPage, err = ins.NewPage("Installation", "Please wait while finishing Installation", "download", nil)
+	if err != nil {
+		return err
+	}
+	win.AppendPage(ins.InstallPage)
+	win.SetPageType(ins.InstallPage, gtk.ASSISTANT_PAGE_PROGRESS)
+
+	ins.installProgress, err = gtk.ProgressBarNew()
+	if err != nil {
+		return err
+	}
+	ins.installProgress.SetShowText(true)
+	ins.installProgress.SetMarginStart(28)
+	ins.installProgress.SetMarginEnd(28)
+	ins.InstallPage.Box.PackStart(ins.installProgress, false, false, 128)
+
+	ins.FinishedPage, err = ins.NewTitledPage("Success", "rlxos is installed successfully, click 'reboot' to reboot into your freshed system", "emblem-checked", nil)
+	if err != nil {
+		return err
+	}
+	rebootButton, err := gtk.ButtonNewWithLabel("reboot")
+	if err != nil {
+		return err
+	}
+	rebootButton.SetHAlign(gtk.ALIGN_CENTER)
+	rebootButton.Connect("clicked", func() {
+		if !ins.IsDebug(APPID) {
 			exec.Command("reboot").Run()
+		} else {
+			app, _ := win.GetApplication()
+			app.Quit()
 		}
-	}
 
-	return &in
+	})
+	ins.FinishedPage.Box.PackStart(rebootButton, false, false, 28)
+
+	win.AppendPage(ins.FinishedPage)
+	win.SetPageType(ins.FinishedPage, gtk.ASSISTANT_PAGE_CUSTOM)
+
+	return err
 }
diff --git a/installer/memory.go b/installer/memory.go
deleted file mode 100644
index 6aef562..0000000
--- a/installer/memory.go
+++ /dev/null
@@ -1,6 +0,0 @@
-package installer
-
-func (in *Installer) StageVerifyMemory() error {
-	// TODO add method to check minimum required memory
-	return nil
-}
diff --git a/installer/verification.go b/installer/verification.go
new file mode 100644
index 0000000..1115988
--- /dev/null
+++ b/installer/verification.go
@@ -0,0 +1,149 @@
+package installer
+
+import (
+	"errors"
+	"fmt"
+	"os"
+	"os/exec"
+	"strings"
+	"time"
+	"unicode"
+
+	"github.com/dustin/go-humanize"
+	"github.com/gotk3/gotk3/glib"
+)
+
+// #include <unistd.h>
+import "C"
+
+func (ins *Installer) SystemMemory() uint64 {
+	return uint64(C.sysconf(C._SC_PHYS_PAGES) * C.sysconf(C._SC_PAGE_SIZE))
+}
+
+func (ins *Installer) StartVerification() {
+	updateProgress := func(mesg string, prog float64) {
+		glib.IdleAdd(func() {
+			ins.verifyProgress.SetText(mesg)
+			ins.verifyProgress.SetFraction(prog)
+		})
+
+		time.Sleep(time.Millisecond * 150)
+	}
+
+	updateProgress("Verifying System Memory", 0.05)
+	SystemMemory = ins.SystemMemory()
+	if SystemMemory < MINIMUM_MEMORY {
+		updateProgress(fmt.Sprintf("Failed, System memory is below mimimum %s requirements", humanize.Bytes(MINIMUM_MEMORY)), 1.0)
+		return
+	}
+	updateProgress(fmt.Sprintf("System Memory Verification Pass: %s", humanize.Bytes(SystemMemory)), 0.1)
+
+	updateProgress("Checking bootloader type", 0.15)
+	if _, err := os.Stat("/sys/firmware/efi/efivars"); err == nil {
+		BootLoader = BootLoaderTypeEfi
+	} else {
+		BootLoader = BootLoaderTypeLegacy
+	}
+	updateProgress(fmt.Sprintf("Found Bootloader %s Type", BootLoader.String()), 0.2)
+
+	updateProgress("Reading paritions ", 0.25)
+
+	getParition := func() (string, error) {
+		partitionsLen := 0
+		devices, err := ListPartitions()
+		if err != nil {
+			return "", err
+		}
+		for _, disks := range devices.Devices {
+			for _, part := range disks.Childrens {
+				partitionsLen++
+				if part.Label == PARITION_LABEL {
+					PartitionUUID = part.UUID
+					return part.Path, nil
+				}
+			}
+		}
+
+		if partitionsLen == 0 {
+			return "", errors.New("no parition Found")
+		}
+
+		return "", errors.New("failed to get partition with label " + PARITION_LABEL)
+	}
+
+	for {
+		var err error
+		PartitionPath, err = getParition()
+		if err != nil {
+			updateProgress(err.Error(), 0.25)
+			if err := exec.Command("gparted").Run(); err != nil {
+				updateProgress("Failed to launch gparted: "+err.Error(), 1.0)
+				return
+			}
+		} else {
+			break
+		}
+	}
+
+	updateProgress("Found Partition: "+PartitionPath, 0.3)
+
+	updateProgress("Checking system Image: "+IMAGE_PATH, 0.35)
+	if !ins.IsDebug(APPID) {
+		if _, err := os.Stat(IMAGE_PATH); err != nil {
+			updateProgress("Failed to verify system Image: "+IMAGE_PATH+", "+err.Error(), 1.0)
+			return
+		}
+	}
+
+	if BootLoader == BootLoaderTypeEfi {
+		getBootParition := func() (string, error) {
+			partitionsLen := 0
+			devices, err := ListPartitions()
+			if err != nil {
+				return "", err
+			}
+			for _, disks := range devices.Devices {
+				for _, part := range disks.Childrens {
+					partitionsLen++
+					if part.PartLabel == "EFI" {
+						return part.Path, nil
+					}
+				}
+			}
+
+			if partitionsLen == 0 {
+				return "", errors.New("no parition Found")
+			}
+
+			return "", errors.New("failed to get partition with label EFI")
+		}
+
+		for {
+			var err error
+			BootDevice, err = getBootParition()
+			if err != nil {
+				updateProgress(err.Error(), 0.25)
+				if err := exec.Command("gparted").Run(); err != nil {
+					updateProgress("Failed to launch gparted: "+err.Error(), 1.0)
+					return
+				}
+			} else {
+				break
+			}
+		}
+
+	} else if BootLoader == BootLoaderTypeLegacy {
+		BootDevice = strings.TrimRightFunc(PartitionPath, func(r rune) bool {
+			return unicode.IsDigit(r)
+		})
+	}
+
+	updateProgress("Found System Image: "+IMAGE_PATH, 0.4)
+
+	updateProgress("System Checkup Complete", 1.0)
+
+	glib.IdleAdd(func() {
+		ins.SetupConfirm()
+		ins.Window.SetPageComplete(ins.VerifyPage, true)
+	})
+}
diff --git a/main.go b/main.go
index fca0965..ac0bb97 100644
--- a/main.go
+++ b/main.go
@@ -5,13 +5,10 @@ import (
 	"log"
 	"os"
 	"os/exec"
-	"strings"
 
 	"github.com/gotk3/gotk3/glib"
 	"github.com/gotk3/gotk3/gtk"
-	"github.com/rlxos/installer/app"
 	"github.com/rlxos/installer/installer"
-	"github.com/rlxos/installer/setup"
 )
 
 const (
@@ -37,20 +34,15 @@ func main() {
 	application.Connect("activate", func() {
 		log.Println("Activating", APPID)
 
-		builder, err := gtk.BuilderNewFromString(app.UI)
+		window, err := gtk.AssistantNew()
 		checkError(err)
 
-		var window *gtk.Window
+		window.SetDefaultSize(800, 600)
 
-		if strings.Contains(string(commandLine), "iso=1") || os.Getenv("SYS_SETUP_MODE") == "installer" {
-			installer := installer.Init(builder)
-			window = installer.Window
-		} else {
-			setup := setup.Init(builder)
-			window = setup.Window
+		if err := installer.Setup(window); err != nil {
+			checkError(err)
 		}
 
-		window.Fullscreen()
 		window.ShowAll()
 		application.AddWindow(window)
 
diff --git a/setup/account.go b/setup/account.go
deleted file mode 100644
index 0416ccb..0000000
--- a/setup/account.go
+++ /dev/null
@@ -1,39 +0,0 @@
-package setup
-
-import (
-	"log"
-	"os/exec"
-	"strings"
-)
-
-func (setup *Setup) StageAccount() error {
-	for {
-		username, password, err := setup.DialogUserLogin("Admin Account Details")
-		if err != nil {
-			return err
-		}
-		if len(username) != 0 && len(password) != 0 {
-			log.Println("Creating user", username)
-			return setup.CreateAccount(username, password)
-		}
-	}
-}
-
-func (setup *Setup) CreateAccount(username, password string) error {
-
-	cmd := exec.Command("openssl", "passwd", "-1", password)
-	passwordBytes, err := cmd.CombinedOutput()
-	if err != nil {
-		return err
-	}
-	password = strings.TrimSpace(string(passwordBytes))
-
-	log.Println("Creating Admin User")
-	if !setup.IsDebug() {
-		if err := exec.Command("useradd", "-m", "-g", "users", "-G", "adm", username, "-p", password).Run(); err != nil {
-			return err
-		}
-
-	}
-	return nil
-}
diff --git a/setup/const.go b/setup/const.go
deleted file mode 100644
index b670a3c..0000000
--- a/setup/const.go
+++ /dev/null
@@ -1,15 +0,0 @@
-package setup
-
-const (
-	ID            = "dev.rlxos.setup"
-	TITLE         = "System Setup"
-	WELCOME_MESG  = "Welcome to rlxOS system setup, Click 'continue' to start tour"
-	PROCESS_TITLE = "Setting up rlxOS"
-	PROCESS_DESC  = ""
-	SUCCESS_MESG  = "rlxOS is configured successfully"
-	SUCCESS_BTN   = "start rlxOS"
-)
-
-var (
-	SUPPORTED_LOCALE = []string{"en_IN.UTF-8", "en_US.UTF-8"}
-)
diff --git a/setup/locale.go b/setup/locale.go
deleted file mode 100644
index 7b4b07a..0000000
--- a/setup/locale.go
+++ /dev/null
@@ -1,47 +0,0 @@
-package setup
-
-import (
-	"io/ioutil"
-	"log"
-	"os"
-	"os/exec"
-	"strings"
-)
-
-func (setup *Setup) StageLocale() error {
-	for {
-		selected, err := setup.DialogList("Select Locale", "locale", SUPPORTED_LOCALE...)
-		if err != nil {
-			return err
-		}
-		if len(selected) != 0 {
-			log.Println("LOCALE", selected)
-			return setup.SetupLocale(selected)
-		}
-	}
-}
-
-func (setup *Setup) SetupLocale(locale string) error {
-	if !setup.IsDebug() {
-		if err := os.MkdirAll("/usr/lib/locale", 0755); err != nil {
-			return err
-		}
-	}
-
-	data := strings.Split(locale, ".")
-	log.Println("Generating locale", data[0]+":"+data[1])
-	if !setup.IsDebug() {
-		if err := exec.Command("localedef", "-i", data[0], "-f", data[1], locale).Run(); err != nil {
-			return err
-		}
-	}
-
-	log.Println("writing locale to configuration")
-	if !setup.IsDebug() {
-		if err := ioutil.WriteFile("/etc/locale.conf", []byte("LANG="+locale), 0); err != nil {
-			return err
-		}
-	}
-
-	return nil
-}
diff --git a/setup/post.go b/setup/post.go
deleted file mode 100644
index 0da0577..0000000
--- a/setup/post.go
+++ /dev/null
@@ -1,20 +0,0 @@
-package setup
-
-import (
-	"log"
-	"os"
-)
-
-func (setup *Setup) StagePost() error {
-	autologin := "/etc/lightdm/lightdm.conf.d/10-auto-login.conf"
-	if _, err := os.Stat(autologin); err == nil {
-		log.Println("removing autologin")
-		if !setup.IsDebug() {
-			if err := os.Remove(autologin); err != nil {
-				return err
-			}
-		}
-
-	}
-	return nil
-}
diff --git a/setup/setup.go b/setup/setup.go
deleted file mode 100644
index b40296a..0000000
--- a/setup/setup.go
+++ /dev/null
@@ -1,43 +0,0 @@
-package setup
-
-import (
-	"log"
-	"os/exec"
-
-	"github.com/gotk3/gotk3/gtk"
-	"github.com/rlxos/installer/app"
-)
-
-type Setup struct {
-	*app.App
-}
-
-func Init(ui *gtk.Builder) *Setup {
-	var setup Setup
-
-	setup.App = app.Create(ui)
-
-	setup.ID = ID
-	setup.Title = TITLE
-	setup.WelcomeMesg = WELCOME_MESG
-	setup.ProcessTitle = PROCESS_TITLE
-	setup.ProcessMesg = PROCESS_DESC
-	setup.SuccessMesg = SUCCESS_MESG
-	setup.SuccessBtn = SUCCESS_BTN
-
-	setup.Initialize()
-
-	setup.AddStage("Setting up locales", setup.StageLocale)
-	setup.AddStage("Setting up TimeZone", setup.StageTimezone)
-	setup.AddStage("Setting up Account", setup.StageAccount)
-	setup.AddStage("Post cleanup processes", setup.StagePost)
-
-	setup.SuccessHandler = func() {
-		log.Println("logging out from system")
-		if !setup.IsDebug() {
-			exec.Command("xfce4-session-logout", "--logout").Run()
-		}
-	}
-
-	return &setup
-}
diff --git a/setup/timezone.go b/setup/timezone.go
deleted file mode 100644
index d291542..0000000
--- a/setup/timezone.go
+++ /dev/null
@@ -1,51 +0,0 @@
-package setup
-
-import (
-	"io/ioutil"
-	"log"
-	"os"
-)
-
-func (setup *Setup) StageTimezone() error {
-
-	zoneDir, err := ioutil.ReadDir("/usr/share/zoneinfo")
-	if err != nil {
-		return err
-	}
-
-	timezones := make([]string, 0)
-	for _, a := range zoneDir {
-		if !a.IsDir() {
-			continue
-		}
-		dir, err := ioutil.ReadDir("/usr/share/zoneinfo/" + a.Name())
-		if err != nil {
-			continue
-		}
-
-		for _, d := range dir {
-			timezones = append(timezones, a.Name()+"/"+d.Name())
-		}
-	}
-
-	for {
-		selected, err := setup.DialogList("Select Timezone", "timezone", timezones...)
-		if err != nil {
-			return err
-		}
-		if len(selected) != 0 {
-			log.Println("TIMEZONE", selected)
-			if !setup.IsDebug() {
-				return setup.SetupTimeZone(selected)
-			} else {
-				return nil
-			}
-
-		}
-	}
-}
-
-func (setup *Setup) SetupTimeZone(zone string) error {
-	os.Remove("/etc/localtime")
-	return os.Symlink("/usr/share/zoneinfo/"+zone, "/etc/localtime")
-}
-- 
2.32.0

