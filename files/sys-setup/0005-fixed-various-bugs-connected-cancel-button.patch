From edd5b7fa948058c24ad75c377b14386d537c5693 Mon Sep 17 00:00:00 2001
From: itsmanjeet <itsmanjeet1998@gmail.com>
Date: Wed, 17 Nov 2021 12:13:12 +0530
Subject: [PATCH] fixed various bugs, connected cancel button

---
 firstlogin/setup.go    | 14 +++++++++++++-
 firstlogin/user.go     |  4 ++--
 installer/installer.go |  5 +++++
 main.go                | 12 ------------
 4 files changed, 20 insertions(+), 15 deletions(-)

diff --git a/firstlogin/setup.go b/firstlogin/setup.go
index c2705e4..0c7e88d 100644
--- a/firstlogin/setup.go
+++ b/firstlogin/setup.go
@@ -33,6 +33,11 @@ func Setup(win *gtk.Assistant) error {
 		return err
 	}
 
+	win.Connect("cancel", func() {
+		app, _ := win.GetApplication()
+		app.Quit()
+	})
+
 	f.WelcomePage, err = f.NewPage("Welcome!", "Thanks for choosing rlxos", "rlxos", nil)
 	if err != nil {
 		return err
@@ -147,7 +152,14 @@ func Setup(win *gtk.Assistant) error {
 	finishedBtn.SetHAlign(gtk.ALIGN_CENTER)
 	finishedBtn.Connect("clicked", func() {
 		if !f.IsDebug(APPID) {
-			exec.Command("xfce4-session-logout", "--logout").Run()
+			err := os.RemoveAll("/etc/lightdm/lightdm.conf.d/10-auto-login.conf")
+			if err != nil {
+				log.Println("Failed to remove autologin file, ", err.Error())
+			}
+			if err := exec.Command("xfce4-session-logout", "--logout").Run(); err != nil {
+				log.Println("Failed to do execute logout, ", err)
+			}
+
 		} else {
 			app, _ := win.GetApplication()
 			app.Quit()
diff --git a/firstlogin/user.go b/firstlogin/user.go
index 4bdf787..56c881a 100644
--- a/firstlogin/user.go
+++ b/firstlogin/user.go
@@ -52,11 +52,11 @@ func (f *FirstLogin) createUser(userid, passwd string) {
 	}
 
 	if !f.IsDebug(APPID) {
-		if err := exec.Command("useradd", "-G", "adm", "-g", "user", "-m", userid).Run(); err != nil {
+		if err := exec.Command("useradd", "-G", "adm", "-g", "users", "-m", userid).Run(); err != nil {
 			showError(err.Error())
 			return
 		}
-		if err := exec.Command("sh", "-c", "echo "+passwd+"\n"+passwd+" | passwd").Run(); err != nil {
+		if err := exec.Command("sh", "-c", "echo -e \""+passwd+"\n"+passwd+"\" | passwd " + userid).Run(); err != nil {
 			showError(err.Error())
 			return
 		}
diff --git a/installer/installer.go b/installer/installer.go
index e6de31b..a1db45a 100644
--- a/installer/installer.go
+++ b/installer/installer.go
@@ -31,6 +31,11 @@ func Setup(win *gtk.Assistant) error {
 		return err
 	}
 
+	win.Connect("cancel", func() {
+		app, _ := win.GetApplication()
+		app.Quit()
+	})
+
 	ins.WelcomePage, err = ins.NewTitledPage("Welcome!", "Click on 'Continue' to verify system compatibality with rlxos", "rlxos", nil)
 	if err != nil {
 		return err
diff --git a/main.go b/main.go
index 4e8ddc2..042556b 100644
--- a/main.go
+++ b/main.go
@@ -7,7 +7,6 @@ import (
 	"os/exec"
 	"strings"
 
-	"github.com/gotk3/gotk3/gdk"
 	"github.com/gotk3/gotk3/glib"
 	"github.com/gotk3/gotk3/gtk"
 	"github.com/rlxos/installer/firstlogin"
@@ -56,17 +55,6 @@ func main() {
 		window.ShowAll()
 		application.AddWindow(window)
 
-		provider, err := gtk.CssProviderNew()
-		checkError(err)
-
-		if err := provider.LoadFromData("entry { padding: 18px; }"); err != nil {
-			checkError(err)
-		}
-
-		screen, err := gdk.ScreenGetDefault()
-		checkError(err)
-		gtk.AddProviderForScreen(screen, provider, 1)
-
 	})
 
 	application.Connect("shutdown", func() {
-- 
2.32.0

