id: linux
version: 5.18.3
release: 6
about: |
  Linux kernel, modules and headers

sources:
  - https://www.kernel.org/pub/linux/kernel/v5.x/linux-{{version}}.tar.xz

depends:
  buildtime:
    - coreutils
    - kmod
    - bc
    - cpio
    - xz
    - xmlto
    - tar
    - libelf
    - zstd

script: |
  make mrproper

  echo "Setting version..."
  scripts/setlocalversion --save-scmversion
  echo "-{{release}}" > localversion.10-release
  
  cp ${FILES_DIR}/config ./.config

  echo "generating olddefconfig"
  make olddefconfig

  make -s kernelrelease > version

  make all
  
  kernelver="$(<version)"
  modulesdir="${pkgupd_pkgdir}/lib/modules/${kernelver}"
  
  echo "installing boot image"
  install -D -m644 "$(make -s image_name)" ${modulesdir}/vmlinuz
  echo {{id}} | install -D -m 644 /dev/stdin "${modulesdir}/id"

  echo "installing modules"
  make INSTALL_MOD_PATH=${pkgupd_pkgdir}  \
    INSTALL_MOD_STRIP=1 \
    DEMOD=/doesnt/exist modules_install

  rm ${modules_dir}/{source,build}

  # Header files
  builddir="${modulesdir}/build"

  echo "install build files"
  install -Dt "$builddir" -m644 .config Makefile Module.symvers System.map \
    localversion.* version vmlinux

  install -Dt "$builddir/kernel" -m644 kernel/Makefile
  install -Dt "$builddir/arch/x86" -m644 arch/x86/Makefile
  cp -t "$builddir" -a scripts

  # required when STACK_VALIDATION is enabled
  install -Dt "$builddir/tools/objtool" tools/objtool/objtool

  # required when DEBUG_INFO_BTF_MODULES is enabled
  install -Dt "$builddir/tools/bpf/resolve_btfids" tools/bpf/resolve_btfids/resolve_btfids

  echo "Installing headers..."
  cp -t "$builddir" -a include
  cp -t "$builddir/arch/x86" -a arch/x86/include
  install -Dt "$builddir/arch/x86/kernel" -m644 arch/x86/kernel/asm-offsets.s

  install -Dt "$builddir/drivers/md" -m644 drivers/md/*.h
  install -Dt "$builddir/net/mac80211" -m644 net/mac80211/*.h

  # https://bugs.archlinux.org/task/13146
  install -Dt "$builddir/drivers/media/i2c" -m644 drivers/media/i2c/msp3400-driver.h

  # https://bugs.archlinux.org/task/20402
  install -Dt "$builddir/drivers/media/usb/dvb-usb" -m644 drivers/media/usb/dvb-usb/*.h
  install -Dt "$builddir/drivers/media/dvb-frontends" -m644 drivers/media/dvb-frontends/*.h
  install -Dt "$builddir/drivers/media/tuners" -m644 drivers/media/tuners/*.h

  # https://bugs.archlinux.org/task/71392
  install -Dt "$builddir/drivers/iio/common/hid-sensors" -m644 drivers/iio/common/hid-sensors/*.h

  echo "Installing KConfig files..."
  find . -name 'Kconfig*' -exec install -Dm644 {} "$builddir/{}" \;

  echo "Removing unneeded architectures..."
  local arch
  for arch in "$builddir"/arch/*/; do
    [[ $arch = */x86/ ]] && continue
    echo "Removing $(basename "$arch")"
    rm -r "$arch"
  done

  echo "Removing documentation..."
  rm -r "$builddir/Documentation"

  echo "Removing broken symlinks..."
  find -L "$builddir" -type l -printf 'Removing %P\n' -delete

  echo "Removing loose objects..."
  find "$builddir" -type f -name '*.o' -printf 'Removing %P\n' -delete

  echo "Stripping build tools..."
  local file
  while read -rd '' file; do
    case "$(file -bi "$file")" in
      application/x-sharedlib\;*)      # Libraries (.so)
        strip -v $STRIP_SHARED "$file" ;;
      application/x-archive\;*)        # Libraries (.a)
        strip -v $STRIP_STATIC "$file" ;;
      application/x-executable\;*)     # Binaries
        strip -v $STRIP_BINARIES "$file" ;;
      application/x-pie-executable\;*) # Relocatable binaries
        strip -v $STRIP_SHARED "$file" ;;
    esac
  done < <(find "$builddir" -type f -perm -u+x ! -name vmlinux -print0)

  echo "Stripping vmlinux..."
  strip -v $STRIP_STATIC "$builddir/vmlinux"

  echo "Adding symlink..."
  mkdir -p "${pkgupd_pkgdir}/usr/src"
  ln -sr "$builddir" "${pkgupd_pkgdir}/usr/src/{{id}}"

  mv ${pkgupd_pkgdir}/{lib,boot}

split:
  - into: kernel-headers
    about: Headers and scripts for building modules for the Linux kernel

    files:
      - boot/modules/{{version}}/build/
      - usr/src/{{id}}