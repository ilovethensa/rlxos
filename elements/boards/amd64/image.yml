id: amd64-system-image
merge: [version.yml]
about: System Image [AMD64]

variables:
  installer-volume-id: RLXOS
  kargs: >-
    --karg=quiet
    --karg=splash
    --karg=root=live:LABEL=RLXOS
    --karg=rd.live.overlay.overlayfs=1
    --karg=systemd.debug-shell
    --karg=console=tty0
  
  include-root: "/source-repo"
  sysroot: "/sysroot"
  ostree-repo: "/sysroot/ostree/repo"

script: |-
  ostree admin init-fs --modern %{sysroot}
  ostree admin os-init --sysroot=%{sysroot} %{installer-volume-id}
  ostree config --repo=%{ostree-repo} set bootloader none

  ostree pull-local --repo=%{ostree-repo} %{include-root} %{arch}/%{codename}

  ostree admin deploy --sysroot=%{sysroot} --os=rlxos  \
    %{arch}/%{codename} \
    %{kargs}

  ostree admin set-origin --sysroot="%{sysroot}" \
    --index=0 rlxos %{ostree-remote-url} %{arch}/%{codename}
  
  ostree remote delete rlxos

  mkdir -p %{sysroot}/proc

  cat > %{sysroot}/boot/loader/loader.conf <<EOF
  timeout 5
  editor yes
  auto-entries no
  auto-firmware yes
  default rlxos.conf
  EOF

  mkdir -p ISO/{boot/grub/{fonts,x86_64-efi},efi/boot,isolinux}
  mkdir -p ISO/LiveOS

  mksquashfs %{sysroot} ISO/LiveOS/squashfs.img -b 1048576 -comp xz -Xdict-size 100%

  kerver=$(ls /boot/modules | head -n1)

  for file in chain.c32 isolinux.bin ldlinux.c32 libutil.c32 reboot.c32 vesamenu.c32 libcom32.c32 poweroff.c32 ; do
    cp %{datadir}/syslinux/$file ISO/isolinux/
  done

  install -vDm0644 /dev/stdin ISO/isolinux/isolinux.cfg << EOF
  DEFAULT RLXOS GNU/Linux
  LABEL RLXOS GNU/Linux
    KERNEL /boot/modules/${kerver}/bzImage
    APPEND initrd=/boot/modules/${kerver}/initramfs.img %{cmdline}
  EOF

  install -vDm0644 /dev/stdin ISO/boot/grub/grub.cfg << EOF
  set default="RLXOS GNU/Linux"
  set timeout=10

  insmod all_video
  if loadfont /boot/grub/fonts/unicode.pf2; then
    set gfxmode=800x600
    insmod efi_gop
    insmod efi_uga
    insmod video_bochs
    insmod video_cirrus
    insmod gfxterm
    insmod png
    terminal_output gfxterm
  fi

  menuentry "RLXOS GNU/Linux" {
    linux /boot/vmlinuz-${kerver} %{cmdline}
    initrd /boot/initramfs-${kerver}
  }

  EOF

  cp %{datadir}/grub/unicode.pf2 ISO/boot/grub/fonts/
  echo "set prefix=/boot/grub" > ISO/boot/grub-early.cfg
  cp -a %{libdir}/grub/x86_64-efi/*.{mod,lst} ISO/boot/grub/x86_64-efi

  grub-mkimage -c ISO/boot/grub-early.cfg -o ISO/efi/boot/bootx64.efi -Ox86_64-efi -p "" iso9660 normal search search_fs_file
  dd if=/dev/zero of=ISO/boot/efiboot.img count=4096
  mkdosfs -n RLXOS-UEFI ISO/boot/efiboot.img
  mkdir -p ISO/boot/efiboot
  mount ISO/boot/efiboot.img ISO/boot/efiboot
  mkdir -p ISO/boot/efiboot/EFI/boot
  cp ISO/efi/boot/bootx64.efi ISO/boot/efiboot/EFI/boot
  umount ISO/boot/efiboot
  rm -fr ISO/boot/efiboot

  dracut -v --no-machineid \
    --kernel-image /boot/vmlinuz-%{kerver} \
    -kver ${kerver} \
    --kernel-cmdline %{kargs} \
    --add dmsquash-live \
    --add plymouth \
    --install grep \
    --install head \
    --install tail \
    --install less \
    --install lsof \
    --omit lvm ${PWD}/ISO/boot/initramfs-${kerver}.img
    
  mkdir -p %{install-root}/
  xorriso -as mkisofs \
    -isohybrid-mbr %{datadir}/syslinux/isohdpfx.bin \
    -c isolinux/boot.cat \
    -b isolinux/isolinux.bin \
       -no-emul-boot \
       -boot-load-size 4 \
       -boot-info-table \
    -eltorito-alt-boot \
    -e boot/efiboot.img \
       -no-emul-boot \
       -isohybrid-gpt-basdat \
       -volid %{installer-volume-id} \
    -o %{install-root}/rlxos-%{version}-%{id}.iso ISO/

  cd %{install-root}
  sha256sum rlxos-%{version}-%{id}.iso >rlxos-%{version}-%{id}.iso.sha265sum


build-depends:
  - components/core.yml
  - components/e2fsprogs.yml
  - kernel/linux.yml
  - components/dracut.yml
  - components/mtools.yml
  - components/grub.yml
  - components/systemd.yml
  - components/cryptsetup.yml
  - components/squashfs-tools.yml
  - components/syslinux.yml

include:
  - boards/amd64/repo.yml
