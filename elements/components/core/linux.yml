id: linux
version: 6.3.8
release: 1
about: |
  Linux kernel, modules and headers
sources:
  - https://www.kernel.org/pub/linux/kernel/v6.x/linux-%{version}.tar.xz

script: |
  make mrproper
  cp /files/core/linux/config ./.config
  mkdir -p %{install-root}/{boot,lib}
  make olddefconfig
  cp ./.config /files/core/linux/config
  make bzImage modules
  make INSTALL_MOD_PATH=%{install-root} \
       INSTALL_MOD_STRIP=1 \
       modules_install
  
  install -D -m 644 "$(make -s image_name)" %{install-root}/lib/modules/%{version}/vmlinuz

  rm %{install-root}/lib/modules/%{version}/{build,source}
  rm %{install-root}/lib/modules
  

  echo "installing build files"
  builddir="%{install-root}/lib/modules/%{version}/build"
  install -D -t "${builddir}" -m644 .config Makefile Module.symvers System.map vmlinux
  install -Dt "$builddir/kernel" -m644 kernel/Makefile
  install -Dt "$builddir/arch/x86" -m644 arch/x86/Makefile
  cp -t "$builddir" -a scripts
  # required when STACK_VALIDATION is enabled
  install -Dt "$builddir/tools/objtool" tools/objtool/objtool
  echo "Installing headers..."
  cp -t "$builddir" -a include
  cp -t "$builddir/arch/x86" -a arch/x86/include
  install -Dt "$builddir/arch/x86/kernel" -m644 arch/x86/kernel/asm-offsets.s
  install -Dt "$builddir/drivers/md" -m644 drivers/md/*.h
  install -Dt "$builddir/net/mac80211" -m644 net/mac80211/*.h
  install -Dt "$builddir/drivers/media/i2c" -m644 drivers/media/i2c/msp3400-driver.h
  install -Dt "$builddir/drivers/media/usb/dvb-usb" -m644 drivers/media/usb/dvb-usb/*.h
  install -Dt "$builddir/drivers/media/dvb-frontends" -m644 drivers/media/dvb-frontends/*.h
  install -Dt "$builddir/drivers/media/tuners" -m644 drivers/media/tuners/*.h
  install -Dt "$builddir/drivers/iio/common/hid-sensors" -m644 drivers/iio/common/hid-sensors/*.h
  echo "Installing KConfig files..."
  find . -name 'Kconfig*' -exec install -Dm644 {} "$builddir/{}" \;
  echo "Removing unneeded architectures..."
  for arch in "$builddir"/arch/*/; do
    [[ $arch = */x86/ ]] && continue
    echo "Removing $(basename "$arch")"
    rm -r "$arch"
  done
  echo "Removing documentation..."
  rm -r "$builddir/Documentation"
  echo "Removing broken symlinks..."
  find -L "$builddir" -type l -printf 'Removing %P\n' -delete
  echo "Removing loose objects..."
  find "$builddir" -type f -name '*.o' -printf 'Removing %P\n' -delete
  echo "Adding symlink..."
  mkdir -p "%{install-root}/usr/src"
  ln -sr "$builddir" "%{install-root}/usr/src/%{id}"

build-time:
  - components/core/coreutils.yml
  - components/core/kmod.yml
  - components/core/bc.yml
  - components/core/cpio.yml
  - components/core/xz.yml
  - components/core/xmlto.yml
  - components/core/tar.yml
  - components/core/libelf.yml
  - components/core/zstd.yml
