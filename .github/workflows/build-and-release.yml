name: Build and Release
on:
  push:
    tags:
      - '[0-9]+.[0-9]+'
    branches:
      - '[0-9]+.x'

env:
  NO_PRINT_PROGRESS: 1
  IGNITE: ./build/ignite

jobs:
  generate-image:
    name: Generate Image
    runs-on: self-hosted
    timeout-minutes: 47000
    strategy:
      matrix:
        board:
          - amd64
    steps:
      - uses: actions/checkout@v1

      - name: Compiler Ignite
        run: |
          make

      - name: Prerequisties
        run: |
          VERSION=${GITHUB_REF#refs/*/}
          echo "version: ${VERSION}" > version.yml
          echo "VERSION=${VERSION}"   >> $GITHUB_ENV

      - name: Generate Element Cache
        run: |
          for element in apps usr image ; do
            ${IGNITE} build boards/${{matrix.board}}/${element}.yml
          done

      - name: Checkout System Image
        run: |
          ${IGNITE} checkout boards/${{matrix.board}}/usr.yml here
          mv here/sysroot.img ${{secrets.SERVER_REPO_PATH}}/images/${VERSION}
          rm -f ${{secrets.SERVER_REPO_PATH}}/images/${VERSION}.gz
          gzip -9 ${{secrets.SERVER_REPO_PATH}}/images/${VERSION}
          (cd ${{secrets.SERVER_REPO_PATH}}/images/; zsyncmake -b 2048 -C -U ${{secrets.SERVER_REPO_URL}}/images/${VERSION} ${VERSION}.gz)
          (cd ${{secrets.SERVER_REPO_PATH}}/images; find . -type f -regex '.*[0-9]+\.[0-9]+\.gz' -exec sha256sum {} \;) > ${{secrets.SERVER_REPO_PATH}}/images/SHA256SUMS
          

      - name: Update Installer ISO
        run: |
          ${IGNITE} checkout boards/${{matrix.board}}/image.yml ${{secrets.SERVER_REPO_PATH}}/releases/
          (cd ${{secrets.SERVER_REPO_PATH}}/releases/; zsyncmake -b 2048 -C -u ${{secrets.SERVER_REPO_URL}}/releases/rlxos-${VERSION}-${{matrix.board}}-image.iso rlxos-${VERSION}-${{matrix.board}}-image.iso)

      - name: Generate Market data
        if: github.ref_type == 'tag'
        run: |-
          ${IGNITE} generate-market-data ${{secrets.SERVER_REPO_PATH}}/

      - name: Create changelog text
        id: changelog
        uses: loopwerk/tag-changelog@v1
        if: github.ref_type == 'tag'
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          exclude_types: other,doc,chore,workflow

      - name: Create release
        uses: actions/create-release@latest
        if: github.ref_type == 'tag'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ${{ steps.changelog.outputs.changes }}